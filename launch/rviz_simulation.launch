<?xml version="1.0"?>
<!-- Note: This launch file is used to test the URDF and Meshes
     PLEASE - DO NOT launch this while networked against
     a real Baxter robot. It will crash the onboard
     robot_state_publisher, and you will need to reboot
     your robot for it to function properly again -->

<launch>
  <arg name="joint_state_pub" default="0" />

  <!-- send robot XML to param server -->
  <param name="robot_description" command="$(find xacro)/xacro --inorder $(find
                                           baxter_description)/urdf/baxter.urdf.xacro"/>

  <!-- open joint_state_pub in case we want joint_position_control -->
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" if="$(arg joint_state_pub)">
    <param name="use_gui" value="TRUE"/>
    <remap from="joint_states" to="joint_vel_sim/joint_states/pos" />
  </node>

  <!-- Open the realy node which takes partially filled JointState messages and fills in the rest -->
  <node name="joint_vel_sim" pkg="baxter_force_control" type="joint_vel_sim.py" output="screen" />

  <!-- Link the robot state publisher to the output of the relay node -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher"> 
    <remap from="joint_states" to="robot/joint_states" />
  </node>

  <!-- Show in Rviz   -->
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find baxter_description)/launch/baxter.rviz"/>

  <!-- Fake transform from world origin to robot origin (base) -->
  <node pkg="tf" type="static_transform_publisher" name="$(anon tf)" args="0 0 0 0 0 0 /world /base 30" />

</launch>
